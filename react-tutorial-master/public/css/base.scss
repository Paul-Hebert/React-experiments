$black : #222;

$white : #fffff8;

$light-grey : #eee;

$grey : #ccc;

$accent : #9FCA56;
$hovered : #B8E866;

@function size($multiplier,$units){
  $last : 1;
  $current : 2;

  @for $i from 1 through $multiplier{
      $temp : $current + $last;
      $last : $current;
      $current : $temp;
  }

  @return $current + $units;
}

/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

#content{
  max-width: size(7,em);
  margin: 0 auto;
}

.comment{
  background:#eee;
  margin:size(1,pt);
  padding:size(2,pt);
  @include prefix(border-radius, size(3,pt), webkit ms o moz);
}

.commentAuthor, .commentContent{
  display:inline-block;
}

.commentAuthor{
  font-family:Roboto Slab;
  width: size(4,em);
  font-size: size(4,pt);
}

.commentContent{
  font-family:Roboto;
}

.imgWrapper{
  @include prefix(border-radius, 50%, webkit ms o moz);  
  overflow:hidden;
  width:size(1,em); 
  height:size(1,em); 
  display:inline-block;
  vertical-align:middle;
  margin-right:size(2,pt);

  img{
    width:100%;
  }
}

input[type=text]{
  &:disabled{
    border:0px;
    background:inherit;
    color:inherit;
  }

  @extend .commentAuthor;
}

input[type=submit]{
  @include prefix(border-radius, size(3,pt), webkit ms o moz); 
  background:$accent;
  color:$white;
  border:none;
  display:block;
  padding: size(3,pt) size(5,pt);
  @include prefix(transition,background 300ms, webkit ms o moz);
  cursor:pointer;

  &:hover{
    background:$hovered;
  }
}